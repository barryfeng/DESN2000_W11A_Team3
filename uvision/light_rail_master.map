ARM Linker, 4.1 [Build 894] [Evaluation]

==============================================================================

Section Cross References

    lpc2400.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    lpc2400.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    lpc2400.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    lpc2400.o(RESET) refers to lpc2400.o(STACK) for Stack_Top
    lpc2400.o(RESET) refers to __main.o(!!!main) for __main
    lpc2400.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    lpc2400.o(.text) refers to lpc2400.o(HEAP) for Heap_Mem
    lpc2400.o(.text) refers to lpc2400.o(STACK) for Stack_Mem
    master_controller.o(.text) refers to system_init.o(.text) for init_pll
    master_controller.o(.text) refers to aeabi_memset.o(.text) for __aeabi_memset
    master_controller.o(.text) refers to system_timer.o(.text) for start_master_isr
    master_controller.o(.text) refers to diagnostics.o(.text) for check_diag_conditions
    master_controller.o(.text) refers to master_controller.o(.bss) for light_rail
    fixed_point_pid.o(.text) refers to frleqf.o(x$fpl$frleqf) for __aeabi_cfrcmple
    fixed_point_pid.o(.text) refers to fleqf.o(x$fpl$fleqf) for __aeabi_cfcmple
    fixed_point_pid.o(.text) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    fixed_point_pid.o(.text) refers to ffixu.o(x$fpl$ffixu) for __aeabi_f2uiz
    fixed_point_pid.o(.text) refers to feqf.o(x$fpl$feqf) for __aeabi_cfcmpeq
    fixed_point_pid.o(.text) refers to aeabi_memset.o(.text) for __aeabi_memset
    fixed_point_pid.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    motion_controller.o(.text) refers to system_init.o(.text) for spi_write
    motion_controller.o(.text) refers to fixed_point_pid.o(.text) for init_controller
    motion_controller.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    motion_controller.o(.text) refers to motion_controller.o(.data) for result
    motion_controller.o(.text) refers to master_controller.o(.bss) for light_rail
    motion_controller.o(.text) refers to motion_controller.o(.bss) for pi_controller
    system_timer.o(.text) refers to motion_controller.o(.text) for run_controller
    system_timer.o(.text) refers to access_data.o(.text) for store_data
    access_data.o(.text) refers to master_controller.o(.bss) for light_rail
    diagnostics.o(.text) refers to spi_mmc.o(.text) for mmc_init
    diagnostics.o(.text) refers to system_init.o(.text) for spi_read
    diagnostics.o(.text) refers to spi_mmc.o(.bss) for MMCRDData
    diagnostics.o(.text) refers to master_controller.o(.bss) for light_rail
    spi_mmc.o(.text) refers to system_init.o(.text) for spi_read
    spi_mmc.o(.text) refers to diagnostics.o(.text) for spi_write_block
    spi_mmc.o(.text) refers to spi_mmc.o(.bss) for MMCWRData
    spi_mmc.o(.text) refers to spi_mmc.o(.data) for MMCStatus
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    feqf.o(x$fpl$feqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    feqf.o(x$fpl$feqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    ffixu.o(x$fpl$ffixu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixu.o(x$fpl$ffixu) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffixu.o(x$fpl$ffixur) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixu.o(x$fpl$ffixur) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fleqf.o(x$fpl$fleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fleqf.o(x$fpl$fleqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fleqf.o(x$fpl$fleqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fmul.o(x$fpl$fmul) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    frleqf.o(x$fpl$frleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    frleqf.o(x$fpl$frleqf) refers to fleqf.o(x$fpl$fleqf) for __fpl_fcmple_InfNaN
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    fcmpi.o(x$fpl$fcmpinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to master_controller.o(.text) for main
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to lpc2400.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000028) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002F) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_user_alloc_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$0000000C) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000022) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000023) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    fpinit.o(x$fpl$fpinit) refers to rt_fp_status_addr_intlibspace.o(.text) for __rt_fp_status_addr
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_fp_status_addr.o(.text) refers to rt_fp_status_addr.o(.bss) for __rt_fp_status_addr_data
    rt_fp_status_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing master_controller.o(.data), (20 bytes).
    Removing system_init.o(.data), (20 bytes).
    Removing system_timer.o(.data), (20 bytes).
    Removing access_data.o(.data), (20 bytes).
    Removing diagnostics.o(.data), (20 bytes).

5 unused section(s) (total 100 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00001968, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x0000192c, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x0000034c   Code   RO            3    RESET               lpc2400.o
    0x0000034c   0x00000008   Code   RO          229  * !!!main             c_t.l(__main.o)
    0x00000354   0x00000006   Code   RO          279    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x0000035a   0x00000000   Code   RO          287    .ARM.Collect$$libinit$$00000006  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          289    .ARM.Collect$$libinit$$00000008  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          291    .ARM.Collect$$libinit$$0000000A  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          294    .ARM.Collect$$libinit$$0000000D  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          296    .ARM.Collect$$libinit$$0000000F  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          298    .ARM.Collect$$libinit$$00000011  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          300    .ARM.Collect$$libinit$$00000013  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          302    .ARM.Collect$$libinit$$00000015  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          304    .ARM.Collect$$libinit$$00000017  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          306    .ARM.Collect$$libinit$$00000019  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          308    .ARM.Collect$$libinit$$0000001B  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          310    .ARM.Collect$$libinit$$0000001D  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          312    .ARM.Collect$$libinit$$0000001F  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          314    .ARM.Collect$$libinit$$00000021  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          318    .ARM.Collect$$libinit$$00000028  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          320    .ARM.Collect$$libinit$$0000002A  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          322    .ARM.Collect$$libinit$$0000002C  c_t.l(libinit2.o)
    0x0000035a   0x00000000   Code   RO          324    .ARM.Collect$$libinit$$0000002E  c_t.l(libinit2.o)
    0x0000035a   0x0000000c   Code   RO          325    .ARM.Collect$$libinit$$0000002F  c_t.l(libinit2.o)
    0x00000366   0x00000004   Code   RO          350    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x0000036a   0x00000000   Code   RO          364    .ARM.Collect$$libshutdown$$00000003  c_t.l(libshutdown2.o)
    0x0000036a   0x00000000   Code   RO          367    .ARM.Collect$$libshutdown$$00000006  c_t.l(libshutdown2.o)
    0x0000036a   0x00000000   Code   RO          370    .ARM.Collect$$libshutdown$$00000009  c_t.l(libshutdown2.o)
    0x0000036a   0x00000000   Code   RO          372    .ARM.Collect$$libshutdown$$0000000B  c_t.l(libshutdown2.o)
    0x0000036a   0x00000000   Code   RO          375    .ARM.Collect$$libshutdown$$0000000E  c_t.l(libshutdown2.o)
    0x0000036a   0x00000006   Code   RO          376    .ARM.Collect$$libshutdown$$0000000F  c_t.l(libshutdown2.o)
    0x00000370   0x00000000   Code   RO          243    .ARM.Collect$$rtentry$$00000000  c_t.l(rtentry.o)
    0x00000370   0x00000000   Code   RO          254    .ARM.Collect$$rtentry$$00000002  c_t.l(rtentry2.o)
    0x00000370   0x00000008   Code   RO          266    .ARM.Collect$$rtentry$$00000004  c_t.l(rtentry4.o)
    0x00000378   0x00000000   Code   RO          256    .ARM.Collect$$rtentry$$00000009  c_t.l(rtentry2.o)
    0x00000378   0x00000004   Code   RO          257    .ARM.Collect$$rtentry$$0000000A  c_t.l(rtentry2.o)
    0x0000037c   0x00000000   Code   RO          259    .ARM.Collect$$rtentry$$0000000C  c_t.l(rtentry2.o)
    0x0000037c   0x00000028   Code   RO          260    .ARM.Collect$$rtentry$$0000000D  c_t.l(rtentry2.o)
    0x000003a4   0x00000004   Code   RO          283    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x000003a8   0x00000000   Code   RO          329    .ARM.Collect$$rtexit$$00000002  c_t.l(rtexit2.o)
    0x000003a8   0x00000004   Code   RO          330    .ARM.Collect$$rtexit$$00000003  c_t.l(rtexit2.o)
    0x000003ac   0x00000008   Code   RO          331    .ARM.Collect$$rtexit$$00000004  c_t.l(rtexit2.o)
    0x000003b4   0x00000020   Code   RO            4    .text               lpc2400.o
    0x000003d4   0x000000cc   Code   RO           11    .text               master_controller.o
    0x000004a0   0x00000210   Code   RO           88    .text               fixed_point_pid.o
    0x000006b0   0x0000028c   Code   RO          100    .text               motion_controller.o
    0x0000093c   0x0000029c   Code   RO          125    .text               system_init.o
    0x00000bd8   0x00000244   Code   RO          145    .text               system_timer.o
    0x00000e1c   0x00000098   Code   RO          163    .text               access_data.o
    0x00000eb4   0x00000184   Code   RO          181    .text               diagnostics.o
    0x00001038   0x0000038c   Code   RO          199    .text               spi_mmc.o
    0x000013c4   0x00000064   Code   RO          223    .text               c_t.l(rt_memcpy_w.o)
    0x00001428   0x00000010   Code   RO          225    .text               c_t.l(aeabi_memset.o)
    0x00001438   0x00000006   Code   RO          227    .text               c_t.l(heapauxi.o)
    0x0000143e   0x00000002   PAD
    0x00001440   0x00000040   Code   RO          244    .text               c_t.l(rt_memclr.o)
    0x00001480   0x00000054   Code   RO          268    .text               c_t.l(rt_memclr_w.o)
    0x000014d4   0x00000060   Code   RO          270    .text               c_t.l(sys_stackheap_outer.o)
    0x00001534   0x0000000c   Code   RO          272    .text               c_t.l(exit.o)
    0x00001540   0x0000000c   Code   RO          280    .text               c_t.l(libspace.o)
    0x0000154c   0x0000000c   Code   RO          338    .text               c_t.l(rt_fp_status_addr_intlibspace.o)
    0x00001558   0x0000000c   Code   RO          342    .text               c_t.l(sys_exit.o)
    0x00001564   0x00000004   Code   RO          353    .text               c_t.l(use_no_semi.o)
    0x00001568   0x00000000   Code   RO          355    .text               c_t.l(indicate_semi.o)
    0x00001568   0x0000001c   Code   RO          246    x$fpl$fcmpinf       fz_ts.l(fcmpi.o)
    0x00001584   0x00000084   Code   RO          231    x$fpl$feqf          fz_ts.l(feqf.o)
    0x00001608   0x00000054   Code   RO          233    x$fpl$ffixu         fz_ts.l(ffixu.o)
    0x0000165c   0x00000084   Code   RO          237    x$fpl$fleqf         fz_ts.l(fleqf.o)
    0x000016e0   0x00000100   Code   RO          239    x$fpl$fmul          fz_ts.l(fmul.o)
    0x000017e0   0x000000a8   Code   RO          248    x$fpl$fnaninf       fz_ts.l(fnaninf.o)
    0x00001888   0x00000018   Code   RO          326    x$fpl$fpinit        fz_ts.l(fpinit.o)
    0x000018a0   0x00000010   Code   RO          250    x$fpl$fretinf       fz_ts.l(fretinf.o)
    0x000018b0   0x0000007c   Code   RO          241    x$fpl$frleqf        fz_ts.l(frleqf.o)
    0x0000192c   0x00000000   Code   RO          252    x$fpl$usenofp       fz_ts.l(usenofp.o)
    0x0000192c   0x00000000   Data   RO          409    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x40000000, Size: 0x000009c8, Max: 0x00010000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x0000001e   Data   RW          102    .data               motion_controller.o
    0x4000001e   0x0000001b   Data   RW          201    .data               spi_mmc.o
    0x40000039   0x00000003   PAD
    0x4000003c   0x0000000c   Zero   RW           12    .bss                master_controller.o
    0x40000048   0x00000018   Zero   RW          101    .bss                motion_controller.o
    0x40000060   0x00000400   Zero   RW          200    .bss                spi_mmc.o
    0x40000460   0x00000060   Zero   RW          281    .bss                c_t.l(libspace.o)
    0x400004c0   0x00000000   Zero   RW            2    HEAP                lpc2400.o
    0x400004c0   0x00000508   Zero   RW            1    STACK               lpc2400.o

